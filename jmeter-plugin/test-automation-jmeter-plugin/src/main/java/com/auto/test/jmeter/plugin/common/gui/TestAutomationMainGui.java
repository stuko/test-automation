/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.auto.test.jmeter.plugin.common.gui;

import com.auto.test.jmeter.plugin.common.sampler.TestPluginSampler;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import javax.swing.JOptionPane;
import java.awt.Insets;
import javax.swing.JTextField;

import javax.swing.border.AbstractBorder;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.geom.Rectangle2D;
import java.awt.geom.RoundRectangle2D;
import java.awt.geom.Area;
import java.awt.Shape;

import org.apache.jmeter.samplers.gui.AbstractSamplerGui;
import org.apache.jmeter.testelement.TestElement;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 *
 * @author O218001_D
 */
public class TestAutomationMainGui  extends AbstractSamplerGui {
    static Logger logger = LoggerFactory.getLogger(TestAutomationMainGui.class);
    /**
     * Creates new form TestAutomationMainGui
     */
    
    TestDataConfigPanel testDataConfigPanel;
    TestRunConfigPanel testRunConfigPanel;
    
    public TestAutomationMainGui() {
        initComponents();
        testDataConfigPanel = new TestDataConfigPanel("테스트 데이터 설정");
        testRunConfigPanel = new TestRunConfigPanel(testDataConfigPanel,null);
        panel_test_data.add(testDataConfigPanel,BorderLayout.NORTH);
        panel_test_data.setAlignmentX(Component.LEFT_ALIGNMENT);
        panel_test_data.setAlignmentY(Component.TOP_ALIGNMENT);
        panel_test_exec.add(testRunConfigPanel,BorderLayout.NORTH);
        panel_test_exec.setAlignmentX(Component.LEFT_ALIGNMENT);
        panel_test_exec.setAlignmentY(Component.TOP_ALIGNMENT);
        this.setBackground(Color.WHITE);
        this.setPreferredSize(new Dimension(800,800));
        panel_test_data.setPreferredSize(new Dimension(800,800));
        panel_test_exec.setPreferredSize(new Dimension(800,800));
        panel_main.setPreferredSize(new Dimension(800,800));
        add(panel_main, BorderLayout.PAGE_START);
        
        //jTextField1 = (RoundedJTextField)jTextField1;
        //jTextField2 = (RoundedJTextField)jTextField2;
        //jTextField3 = (RoundedJTextField)jTextField3;
        //jTextField4 = (RoundedJTextField)jTextField4;
        //jTextField5 = (RoundedJTextField)jTextField5;
        
       //  Insets inset = new Insets(2, 2, 2, 2);
       //  jTextField1.setBorder(BorderFactory.createCompoundBorder(new RoundedCornerBorder (), new EmptyBorder(inset)));
       //  jTextField2.setBorder(BorderFactory.createCompoundBorder(new RoundedCornerBorder (), new EmptyBorder(inset)));
       //  jTextField3.setBorder(BorderFactory.createCompoundBorder(new RoundedCornerBorder (), new EmptyBorder(inset)));
       //  jTextField4.setBorder(BorderFactory.createCompoundBorder(new RoundedCornerBorder (), new EmptyBorder(inset)));
       //  jTextField5.setBorder(BorderFactory.createCompoundBorder(new RoundedCornerBorder (), new EmptyBorder(inset)));
        
    }
    
    @Override
    public String getLabelResource() {
        return "테스트 자동화 플러그인";
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        panel_main = new javax.swing.JTabbedPane();
        panel_project_link = new javax.swing.JPanel();
        lb_project_link_title = new javax.swing.JLabel();
        scrollpanel_project_list = new javax.swing.JScrollPane();
        project_list = new javax.swing.JList<>();
        lb_project_list = new javax.swing.JLabel();
        project_name = new javax.swing.JTextField();
        scrollpanel_project_desc = new javax.swing.JScrollPane();
        project_desc = new javax.swing.JTextArea();
        lb_project_name = new javax.swing.JLabel();
        lb_project_desc = new javax.swing.JLabel();
        btn_save_project_link = new javax.swing.JButton();
        btn_fetch_project_info = new javax.swing.JButton();
        lb_jenkins_project_name = new javax.swing.JLabel();
        jenkins_project_name = new javax.swing.JTextField();
        lb_mattermost_webhook_id = new javax.swing.JLabel();
        mattermost_webhook_id = new javax.swing.JTextField();
        lb_jenkins_url = new javax.swing.JLabel();
        jenkins_url = new javax.swing.JTextField();
        lb_jenkins_token = new javax.swing.JLabel();
        jenkins_token = new javax.swing.JTextField();
        btn_save_scenario = new javax.swing.JButton();
        panel_test_data = new javax.swing.JPanel();
        panel_test_exec = new javax.swing.JPanel();

        lb_test_exec_shell = new javax.swing.JLabel();
        test_exec_shell = new javax.swing.JTextField();

        lb_before_test_exec_shell = new javax.swing.JLabel();
        before_test_exec_shell = new javax.swing.JTextField();


        setPreferredSize(new java.awt.Dimension(477, 500));
        setLayout(new java.awt.BorderLayout());

        panel_main.setMinimumSize(new java.awt.Dimension(440, 900));
        panel_main.setName(""); // NOI18N
        panel_main.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTabbedPane1FocusGained(evt);
            }
        });
        panel_main.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });
        panel_main.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jTabbedPane1ComponentShown(evt);
            }
        });

        panel_project_link.setBackground(new java.awt.Color(255, 255, 255));
        panel_project_link.setPreferredSize(new java.awt.Dimension(435, 800));
        panel_project_link.addHierarchyListener(new java.awt.event.HierarchyListener() {
            public void hierarchyChanged(java.awt.event.HierarchyEvent evt) {
                jPanel1HierarchyChanged(evt);
            }
        });
        panel_project_link.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel1ComponentShown(evt);
            }
        });

        lb_project_link_title.setFont(new java.awt.Font("맑은 고딕", 1, 18)); // NOI18N
        lb_project_link_title.setText("프로젝트 연결 설정");

        project_list.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        project_list.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                jList1ComponentAdded(evt);
            }
        });
        project_list.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jList1ComponentShown(evt);
            }
        });
        project_list.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList1ValueChanged(evt);
            }
        });
        scrollpanel_project_list.setViewportView(project_list);

        lb_project_list.setText("프로젝트 목록");

        project_name.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        project_desc.setColumns(20);
        project_desc.setRows(5);
        project_desc.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        scrollpanel_project_desc.setViewportView(project_desc);

        lb_project_name.setText("프로젝트 이름");

        lb_project_desc.setText("프로젝트 내용");

        btn_save_project_link.setBackground(new java.awt.Color(0, 133, 252));
        btn_save_project_link.setForeground(new java.awt.Color(255, 255, 255));
        btn_save_project_link.setText("테스트 자동화 연결 저장");
        btn_save_project_link.setBorderPainted(false);
        btn_save_project_link.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        btn_save_project_link.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        btn_fetch_project_info.setBackground(new java.awt.Color(0, 133, 252));
        btn_fetch_project_info.setForeground(new java.awt.Color(255, 255, 255));
        btn_fetch_project_info.setText("프로젝트 정보 가져오기");
        btn_fetch_project_info.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        lb_jenkins_project_name.setText("젠킨스 프로젝트 명");

        jenkins_project_name.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lb_mattermost_webhook_id.setText("메타모스트 웹 후킹 키");

        mattermost_webhook_id.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        mattermost_webhook_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        lb_jenkins_url.setText("젠킨스 서버 URL");

        jenkins_url.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jenkins_url.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });

        lb_jenkins_token.setText("젠킨스 토큰");

        jenkins_token.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jenkins_token.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField5ActionPerformed(evt);
            }
        });

        lb_before_test_exec_shell.setText("작업 전 실행 명령");
        lb_test_exec_shell.setText("테스트 시작 실행 명령");

        btn_save_scenario.setBackground(new java.awt.Color(0, 133, 252));
        btn_save_scenario.setForeground(new java.awt.Color(255, 255, 255));
        btn_save_scenario.setText("테스트 시나리오 저장");
        btn_save_scenario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout_project_link = new javax.swing.GroupLayout(panel_project_link);
        panel_project_link.setLayout(layout_project_link);
        layout_project_link.setHorizontalGroup(
            layout_project_link.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout_project_link.createSequentialGroup()
                .addGroup(layout_project_link.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout_project_link.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(lb_project_list)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(scrollpanel_project_list, javax.swing.GroupLayout.PREFERRED_SIZE, 653, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout_project_link.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lb_project_link_title))
                    .addGroup(layout_project_link.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lb_jenkins_url)
                        .addGroup(layout_project_link.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout_project_link.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(btn_save_scenario, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btn_fetch_project_info)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btn_save_project_link, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout_project_link.createSequentialGroup()
                                .addComponent(lb_project_desc)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(scrollpanel_project_desc, javax.swing.GroupLayout.PREFERRED_SIZE, 654, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout_project_link.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout_project_link.createSequentialGroup()
                                .addComponent(lb_jenkins_token)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jenkins_token, javax.swing.GroupLayout.PREFERRED_SIZE, 493, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout_project_link.createSequentialGroup()
                                .addComponent(lb_jenkins_project_name)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jenkins_project_name, javax.swing.GroupLayout.PREFERRED_SIZE, 493, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout_project_link.createSequentialGroup()
                                .addComponent(lb_mattermost_webhook_id)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(mattermost_webhook_id, javax.swing.GroupLayout.PREFERRED_SIZE, 493, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout_project_link.createSequentialGroup()
                                    .addComponent(lb_before_test_exec_shell)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(before_test_exec_shell, javax.swing.GroupLayout.PREFERRED_SIZE, 493, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout_project_link.createSequentialGroup()
                                .addComponent(lb_test_exec_shell)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(test_exec_shell, javax.swing.GroupLayout.PREFERRED_SIZE, 493, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout_project_link.createSequentialGroup()
                                .addGap(190, 190, 190)
                                .addComponent(jenkins_url, javax.swing.GroupLayout.PREFERRED_SIZE, 493, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout_project_link.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(lb_project_name)
                        .addGap(114, 114, 114)
                        .addComponent(project_name, javax.swing.GroupLayout.PREFERRED_SIZE, 493, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(222, Short.MAX_VALUE))
        );
        layout_project_link.setVerticalGroup(
            layout_project_link.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout_project_link.createSequentialGroup()
                .addContainerGap()
                .addComponent(lb_project_link_title)
                .addGap(45, 45, 45)
                .addGroup(layout_project_link.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lb_project_list)
                    .addComponent(scrollpanel_project_list, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout_project_link.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(project_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lb_project_name))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout_project_link.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lb_jenkins_url)
                    .addComponent(jenkins_url, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout_project_link.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout_project_link.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(lb_jenkins_project_name)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout_project_link.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lb_jenkins_token)
                            .addComponent(jenkins_token, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout_project_link.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mattermost_webhook_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lb_mattermost_webhook_id))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout_project_link.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(before_test_exec_shell, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lb_before_test_exec_shell))
                        .addGroup(layout_project_link.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(test_exec_shell, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lb_test_exec_shell))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout_project_link.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(scrollpanel_project_desc, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lb_project_desc)))
                    .addComponent(jenkins_project_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout_project_link.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_save_project_link)
                    .addComponent(btn_fetch_project_info)
                    .addComponent(btn_save_scenario))
                .addContainerGap(372, Short.MAX_VALUE))
        );

        panel_main.addTab("프로젝트 연결 설정", panel_project_link);

        panel_test_data.setBackground(new java.awt.Color(255, 255, 255));
        panel_test_data.setPreferredSize(new java.awt.Dimension(435, 800));
        panel_test_data.setLayout(new java.awt.BorderLayout());
        panel_main.addTab("테스트 데이터 설정", panel_test_data);

        panel_test_exec.setBackground(new java.awt.Color(255, 255, 255));
        panel_test_exec.setPreferredSize(new java.awt.Dimension(435, 800));
        panel_test_exec.setLayout(new java.awt.BorderLayout());
        panel_main.addTab("테스트 실행 설정", panel_test_exec);

        add(panel_main, java.awt.BorderLayout.CENTER);
    }// </editor-fold>                        

    private void jList1ComponentShown(java.awt.event.ComponentEvent evt) {                                      
        // TODO add your handling code here:
    }                                     

    private void jList1ValueChanged(javax.swing.event.ListSelectionEvent evt) {                                    
        // TODO add your handling code here:
        project_desc.setText("");
        project_name.setText("");
        jenkins_project_name.setText("");
        mattermost_webhook_id.setText("");
        jenkins_url.setText("");
        jenkins_token.setText("");
        before_test_exec_shell.setText("");
        test_exec_shell.setText("");
        TestAutomationGuiController.show_project_detail(project_list
                , project_name
                , jenkins_url
                , jenkins_project_name
                , jenkins_token
                , mattermost_webhook_id
                , before_test_exec_shell
                , test_exec_shell
                , project_desc);
    }                                   

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {                                          
        // TODO add your handling code here:
    }                                         

    private void jTabbedPane1ComponentShown(java.awt.event.ComponentEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void jList1ComponentAdded(java.awt.event.ContainerEvent evt) {                                      
        // TODO add your handling code here:
    }                                     

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {                                      
        // TODO add your handling code here:
    }                                     

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        
       if(TestAutomationGuiController.save_project_connection_info(project_list
               , TestAutomationGuiController.get_jmx_file_name()
               , jenkins_url.getText()
               , jenkins_project_name.getText()
               , jenkins_token.getText()
               , mattermost_webhook_id.getText()
               , before_test_exec_shell.getText()
               , test_exec_shell.getText()
       )){
            JOptionPane.showMessageDialog(null, "프로젝트 연결 정보를 저장 하였습니다.");
       }else{
            JOptionPane.showMessageDialog(null, "프로젝트 연결 정보를 저장할 수 없습니다. 젠킨스 연결 정보와 프로젝트 연결정보를 확인해 주세요");
       }
    }                                        

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        TestAutomationGuiController.show_project_list(project_list, this, testDataConfigPanel, testRunConfigPanel);
        JOptionPane.showMessageDialog(null, "프로젝트 정보를 다시 갱신하였습니다.");
    }                                        

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void jPanel1ComponentShown(java.awt.event.ComponentEvent evt) {                                       
        // TODO add your handling code here:
        TestAutomationGuiController.show_project_list(project_list, this, testDataConfigPanel, testRunConfigPanel);
    }                                      

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        TestAutomationGuiController.save_test_scenario();
         JOptionPane.showMessageDialog(null, "테스트 시나리오 파일(jmeter jmx file)을 원격 테스트 서버에 저장 하였습니다.");
    }                                        

    private void jTabbedPane1FocusGained(java.awt.event.FocusEvent evt) {                                         
        // TODO add your handling code here:

    }                                        

    private void jPanel1HierarchyChanged(java.awt.event.HierarchyEvent evt) {                                         
        // TODO add your handling code here:
        TestAutomationGuiController.show_project_detail_by_jmx(this, testDataConfigPanel, testRunConfigPanel);
    }                                        

    
       @Override
    public TestElement createTestElement() {
        logger.info("##### createTestElement #####");
        testRunConfigPanel.attach();
        this.configureTestElement(testDataConfigPanel.getSampler());
        return testDataConfigPanel.getSampler();
    }

    // Plugin GUI 에서 변경된 내용을, Sampler에 전달해 주는 역할을 합니다.
    @Override
    public void modifyTestElement(TestElement element) {
        logger.info("##### modifyTestElement #####");
        super.configureTestElement(element);
        if(element instanceof TestPluginSampler) {
            // Sampler가 복제되어 새로운 객체 테스트 요소를
            // FdsPluginPanel에 전달해 준다.
            // GUI에서 변경된 내용이 Sampler에 영향이 있는 경우
            // FdsPluginPanel은 항상 새로운 최근의 Sampler를 참조하게 된다.
            testDataConfigPanel.setSampler((TestPluginSampler) element);
            testRunConfigPanel.attach();
        }
    }

    @Override
    public void configure(TestElement element) {
        super.configure(element);
    }

    @Override
    public void clearGui() {
        super.clearGui();
    }
    
    public void setProjectName(String project_name){
        this.project_name.setText(project_name);
    }

    public void setProjectDetail(String project_detail){
        this.project_desc.setText(project_detail);
    }

    public void selectProject(String project_id){
        for (int i = 0; i < project_list.getModel().getSize(); i++) {
             String item = String.valueOf(project_list.getModel().getElementAt(i));
             String id = item.split(",")[0];
             if(id.equals(project_id)){
                 project_list.setSelectedIndex(i);
                 break;
             }       
        }
        
    }

    public void setJenkinsProjectName(String jenkins_project_name){
        this.jenkins_project_name.setText(jenkins_project_name);
    }
    public void setMattermostWebHookId(String matterermost_webhook_id){
        this.mattermost_webhook_id.setText(matterermost_webhook_id);
    }
    public void setJenkinsServerUrl(String jenkins_server_url){
        this.jenkins_url.setText(jenkins_server_url);
    }
    public void setJenkinsToken(String jenkins_token){
        this.jenkins_token.setText(jenkins_token);
    }
    public void setBeforeTestExecShell(String test_exec_shell){
        this.before_test_exec_shell.setText(test_exec_shell);
    }
    public void setTestExecShell(String test_exec_shell){
        this.test_exec_shell.setText(test_exec_shell);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TestAutomationMainGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TestAutomationMainGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TestAutomationMainGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TestAutomationMainGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TestAutomationMainGui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton btn_fetch_project_info;
    private javax.swing.JButton btn_save_project_link;
    private javax.swing.JButton btn_save_scenario;
    private javax.swing.JLabel lb_project_link_title;
    private javax.swing.JLabel lb_project_list;
    private javax.swing.JLabel lb_project_name;
    private javax.swing.JLabel lb_project_desc;
    private javax.swing.JLabel lb_jenkins_project_name;
    private javax.swing.JLabel lb_mattermost_webhook_id;
    private javax.swing.JLabel lb_jenkins_url;
    private javax.swing.JLabel lb_jenkins_token;
    private javax.swing.JLabel lb_test_exec_shell;
    private javax.swing.JLabel lb_before_test_exec_shell;
    private javax.swing.JList<String> project_list;
    private javax.swing.JPanel panel_project_link;
    private javax.swing.JPanel panel_test_data;
    private javax.swing.JPanel panel_test_exec;
    private javax.swing.JScrollPane scrollpanel_project_list;
    private javax.swing.JScrollPane scrollpanel_project_desc;
    private javax.swing.JTabbedPane panel_main;
    private javax.swing.JTextArea project_desc;
    private javax.swing.JTextField project_name;
    private javax.swing.JTextField jenkins_project_name;
    private javax.swing.JTextField mattermost_webhook_id;
    private javax.swing.JTextField jenkins_url;
    private javax.swing.JTextField jenkins_token;
    private javax.swing.JTextField test_exec_shell;
    private javax.swing.JTextField before_test_exec_shell;
    // End of variables declaration                   
}

@SuppressWarnings("serial")
class CustomeBorder extends AbstractBorder{
        @Override
        public void paintBorder(Component c, Graphics g, int x, int y,
                int width, int height) {
            // TODO Auto-generated method stub
            super.paintBorder(c, g, x, y, width, height);
            // g.setColor(Color.black);
            g.drawRoundRect(x, y, width, height, 20, 20);
        }

}

class RoundedCornerBorder extends AbstractBorder {
  private static final Color ALPHA_ZERO = new Color(0x0, true);
  @Override public void paintBorder(Component c, Graphics g, int x, int y, int width, int height) {
    Graphics2D g2 = (Graphics2D) g.create();
    g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
    Shape border = getBorderShape(x, y, width - 1, height - 1);
    g2.setPaint(ALPHA_ZERO);
    Area corner = new Area(new Rectangle2D.Double(x, y, width, height));
    corner.subtract(new Area(border));
    g2.fill(corner);
    g2.setPaint(Color.GRAY);
    g2.draw(border);
    g2.dispose();
  }
  public Shape getBorderShape(int x, int y, int w, int h) {
    int r = h; //h / 2;
    return new RoundRectangle2D.Double(x, y, w, h, r, r);
  }
  @Override public Insets getBorderInsets(Component c) {
    return new Insets(2, 4, 2, 4);
  }
  @Override public Insets getBorderInsets(Component c, Insets insets) {
    insets.set(2, 4, 2, 4);
    return insets;
  }
}


class RoundedJTextField extends JTextField{
        @Override protected void paintComponent(Graphics g) {
          if (!isOpaque() && getBorder() instanceof RoundedCornerBorder) {
            Graphics2D g2 = (Graphics2D) g.create();
            g2.setPaint(getBackground());
            g2.fill(((RoundedCornerBorder) getBorder()).getBorderShape(
                0, 0, getWidth() - 1, getHeight() - 1));
            g2.dispose();
          }
          super.paintComponent(g);
        }
        @Override public void updateUI() {
          super.updateUI();
          setOpaque(false);
          setBorder(new RoundedCornerBorder());
        }
}