<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="광주은행 비대면 스코어 확인용 데이터" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="filename">./test/kais-data/GJ_SCR_CHK_20210907.txt</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.group</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">ID,STDAY,TOTAL_SCR,NEAR_PRIME,PRIME,BDM_SOHO_SCR,TOTAL_GRD,NEAR_PRIME_GRD,PRIME_GRD,L20231O00,C1Z001405,C1L120250,AL012G020,C20172001,L2Z001291,AL012G018,L9023C200,C1L120161,L10173000,U81102010,L2Z001075,D10132D0N,D10175D0T,L101AHW06,L2Z001014,L1Z000961,U81201010,L9Z000271,L2M000026,C23282000,L2Z001212,D10310608,AS136G006,AL012G017,L2X000026,L2Z000207,L2Z001222,D1013AD0T,L2Z001221,C1Z001117,C1L120331,D10132D0T,L1Z000929,C1P000011,C1Z001364,L2Z000208,C1N235W1P,L2Z001268,L2Z000199,L1Z000803,L1Z000381,D1013AD0N,D1017500K,L10217000,C1Z001340,L10210000,L1Z000962,L2Z000198,C1Z001190,AH40D0004,AH1020015,AH40C0008,AL0C00004,AS01DG001,AL012G005,C1N228000,AS1DD0002,C18133006,L2Z000177,AL0C00001,AH40D0002,LA1000071,AH1020017,AS120G001,C1N128006,C1Z200001,D10175006,C20220006,L2X000031,AH40C0014,L2Z000223,D10110000,L2M000112,C1N239000,C1M2B3W0C,C1N2A3W06,C1N2B6W0C,D1017500N,C1813300C,D10175000,C1N2B5W06,L2M000021,C1N2B5W0C,C1M237W3P,D10110003,L2Z001247,C1N238000,C1M2B3W06,L2Z001246,C1N2A3W03,L2Z001245,C1N2B6W06,L2Z001244,DA0D00001,C1Z000816,L2Z000247,C1M237W1P,L2Z000996,L2Z000998,DD0140X16,C1Z000946,C1Z000753,C1Z001038,C1L120301,SI00000Z0,SD00000Z0,S8R2000Z0,U93070000,AH4060008,D1017500T,DD0140X1C,DDC006003,L2Z001088,C1N2A6W03,L2M000011,L2Z000957,L2M000013,L2M000014,L2M000127,LA0000077,LA0000098,LA0000094,KCB_SOHO_YN,U5DD01006,SC0000000,SC0001000,S92000000,S92101000,SUL000000,SUL001000,U43002030,U42006030,JOB,CBMIX0001,CBMIX0025,CBMIX0027,CBMIX0032,CBMIX0042,CBMIX0044,CBMIX0047,CBMIX0050,CBMIX0051,CBMIX0056,CBMIX0058,CBMIX0059,CBMIX0071,CBMIX0077,CBMIX0079,CBMIX0096,CBMIX0098,CBMIX0105,CBMIX0119,CBMIX0123</stringProp>
        </CSVDataSet>
        <hashTree/>
        <com.auto.test.jmeter.plugin.common.sampler.TestPluginSampler guiclass="com.auto.test.jmeter.plugin.common.gui.TestAutomationMainGui" testclass="com.auto.test.jmeter.plugin.common.sampler.TestPluginSampler" testname="[res_key=Test Automation Plugin :) - Main]" enabled="false"/>
        <hashTree/>
        <RecordingController guiclass="RecordController" testclass="RecordingController" testname="Login Management" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login Management-0" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">192.168.57.224</stringProp>
            <stringProp name="HTTPSampler.port">8180</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/kais/login/loginForm.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.82 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login Management-1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">192.168.57.224</stringProp>
            <stringProp name="HTTPSampler.port">8180</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/kais/login/credentials/getRsaKey.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.82 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">rsa_key</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.rsaPublicKeyModulus</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="Sample.scope">all</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">N</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.io.UnsupportedEncodingException; 
import java.security.InvalidKeyException; 
import java.security.KeyPair; 
import java.security.KeyPairGenerator; 
import java.security.NoSuchAlgorithmException; 
import java.security.PrivateKey; 
import java.security.PublicKey; 
import java.security.KeyFactory;
import java.security.spec.X509EncodedKeySpec;
import java.security.SecureRandom; 
import java.util.Base64; 
import javax.crypto.BadPaddingException; 
import javax.crypto.Cipher; 
import javax.crypto.IllegalBlockSizeException; 
import javax.crypto.NoSuchPaddingException;
import java.security.spec.RSAPublicKeySpec;
import java.math.BigInteger;

String keyString = vars.get(&quot;rsa_key&quot;);
try{
	String id = &quot;kais_admin01&quot;;
	String pw = &quot;!Q@W3e4r&quot;;
	vars.put(&quot;id&quot;,id);
	vars.put(&quot;pwd&quot;,pw);
	byte[] publicBytes = org.apache.commons.codec.binary.Hex.decodeHex(keyString.toCharArray());
	BigInteger modulus = new BigInteger(1, publicBytes);
     BigInteger publicExponent = BigInteger.valueOf(65537L);
     RSAPublicKeySpec keySpec = new RSAPublicKeySpec(modulus, publicExponent);
     
	// final String publicKeyString = keyString.replaceAll(&quot;\\n&quot;, &quot;&quot;).replaceAll(&quot;-{5}[ a-zA-Z]*-{5}&quot;, &quot;&quot;);
	KeyFactory keyFactory = KeyFactory.getInstance(&quot;RSA&quot;); 
	// X509EncodedKeySpec keySpecX509 = new X509EncodedKeySpec(Base64.getDecoder().decode(publicKeyString)); 
	// PublicKey pub_key = keyFactory.generatePublic(keySpecX509);
	PublicKey pub_key = keyFactory.generatePublic(keySpec);
	
	Cipher cipher = Cipher.getInstance(&quot;RSA&quot;); 
	cipher.init(Cipher.ENCRYPT_MODE, pub_key); 
	byte[] bytePlain = cipher.doFinal(id.getBytes()); 
	String encrypted = org.apache.commons.codec.binary.Hex.encodeHexString(bytePlain);
	// String encrypted = Base64.getEncoder().encodeToString(bytePlain); 
	vars.put(&quot;enc_id&quot;,encrypted);
	
	bytePlain = cipher.doFinal(pw.getBytes()); 
	encrypted = org.apache.commons.codec.binary.Hex.encodeHexString(bytePlain);
	// encrypted = Base64.getEncoder().encodeToString(bytePlain); 
	vars.put(&quot;enc_pw&quot;,encrypted);

}catch(Exception e){
	e.printStackTrace();
}
</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login Management-2" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="rsaEncid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rsaEncid</stringProp>
                  <stringProp name="Argument.value">${enc_id}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="rsaEncpwd" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rsaEncpwd</stringProp>
                  <stringProp name="Argument.value">${enc_pw}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${id}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                </elementProp>
                <elementProp name="pwd" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${pwd}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">pwd</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">192.168.57.224</stringProp>
            <stringProp name="HTTPSampler.port">8180</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/kais/login/login.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.82 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login Management-3" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">192.168.57.224</stringProp>
            <stringProp name="HTTPSampler.port">8180</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/kais/main/readMain.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.82 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login Management-4" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">192.168.57.224</stringProp>
            <stringProp name="HTTPSampler.port">8180</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/kais/kaisCommon/KaisComCodeJs.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.82 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login Management-5" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">192.168.57.224</stringProp>
            <stringProp name="HTTPSampler.port">8180</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/kais/scoreCard/readScoreCardMain.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.82 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login Management-6" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">192.168.57.224</stringProp>
            <stringProp name="HTTPSampler.port">8180</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/kais/kaisCommon/KaisComCodeJs.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.82 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login Management-7" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="TREE_DS" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">TREE_DS</stringProp>
                  <stringProp name="Argument.value">SC</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="TREE_STS" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">TREE_STS</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">192.168.57.224</stringProp>
            <stringProp name="HTTPSampler.port">8180</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/kais/scoreCard/readTreeView.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.82 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1145056687">SC00000001</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$.vo.generalReadYn</stringProp>
              <stringProp name="EXPECTED_VALUE">Y</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login Management-8" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="TREE_DS" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">TREE_DS</stringProp>
                  <stringProp name="Argument.value">SC</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="TREE_STS" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">TREE_STS</stringProp>
                  <stringProp name="Argument.value">C</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="TREE_ID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">TREE_ID</stringProp>
                  <stringProp name="Argument.value">ROOT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">192.168.57.224</stringProp>
            <stringProp name="HTTPSampler.port">8180</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/kais/scoreCard/readTreeView.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.82 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1145056687">SC00000001</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">3000</stringProp>
            </DurationAssertion>
            <hashTree/>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings"/>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <RecordingController guiclass="RecordController" testclass="RecordingController" testname="Scord Card 건별 테스트" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Scord Card 건별 테스트-1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="SCOR_CRD_ID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">SCOR_CRD_ID</stringProp>
                  <stringProp name="Argument.value">SC00000017</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="gridData" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">gridData</stringProp>
                  <stringProp name="Argument.value">[{&quot;OPR_FLAG&quot;:&quot;U&quot;, &quot;REF_ITM_ID&quot;:&quot;ID001&quot;, &quot;REF_ITM_NM&quot;:&quot;개인직업직위코드&quot;, &quot;REF_ITM_DAT_TP&quot;:&quot;STR&quot;, &quot;REF_ITM_DAT_LEN&quot;:&quot;10&quot;, &quot;ITM_INOUT_TP&quot;:&quot;INP&quot;, &quot;ITM_DEF_BSC_VL&quot;:&quot;${ID001}&quot;, &quot;NULL_CK&quot;:&quot;N&quot;, &quot;ORG_ID_CHECKED&quot;:true, &quot;ORG_ID&quot;:&quot;ID001&quot;}, {&quot;OPR_FLAG&quot;:&quot;U&quot;, &quot;REF_ITM_ID&quot;:&quot;PF002&quot;, &quot;REF_ITM_NM&quot;:&quot;고객구분(개인:6210/개인사업자:6110)&quot;, &quot;REF_ITM_DAT_TP&quot;:&quot;STR&quot;, &quot;REF_ITM_DAT_LEN&quot;:&quot;4&quot;, &quot;ITM_INOUT_TP&quot;:&quot;INP&quot;, &quot;ITM_DEF_BSC_VL&quot;:&quot;${PF002}&quot;, &quot;NULL_CK&quot;:&quot;N&quot;, &quot;ORG_ID_CHECKED&quot;:true, &quot;ORG_ID&quot;:&quot;PF002&quot;}, {&quot;OPR_FLAG&quot;:&quot;U&quot;, &quot;REF_ITM_ID&quot;:&quot;JOB_CD&quot;, &quot;REF_ITM_NM&quot;:&quot;직업군&quot;, &quot;REF_ITM_DAT_TP&quot;:&quot;STR&quot;, &quot;REF_ITM_DAT_LEN&quot;:&quot;10&quot;, &quot;ITM_INOUT_TP&quot;:&quot;INP&quot;, &quot;ITM_DEF_BSC_VL&quot;:&quot;${JOB_CD}&quot;, &quot;NULL_CK&quot;:&quot;N&quot;, &quot;ORG_ID_CHECKED&quot;:true, &quot;ORG_ID&quot;:&quot;JOB_CD&quot;}, {&quot;OPR_FLAG&quot;:&quot;U&quot;, &quot;REF_ITM_ID&quot;:&quot;IC001&quot;, &quot;REF_ITM_NM&quot;:&quot;영업년수&quot;, &quot;REF_ITM_DAT_TP&quot;:&quot;ITG&quot;, &quot;REF_ITM_DAT_LEN&quot;:&quot;5&quot;, &quot;ITM_INOUT_TP&quot;:&quot;INP&quot;, &quot;ITM_DEF_BSC_VL&quot;:&quot;${IC001}&quot;, &quot;NULL_CK&quot;:&quot;N&quot;, &quot;ORG_ID_CHECKED&quot;:true, &quot;ORG_ID&quot;:&quot;IC001&quot;}, {&quot;OPR_FLAG&quot;:&quot;U&quot;, &quot;REF_ITM_ID&quot;:&quot;PF020&quot;, &quot;REF_ITM_NM&quot;:&quot;근속월수&quot;, &quot;REF_ITM_DAT_TP&quot;:&quot;ITG&quot;, &quot;REF_ITM_DAT_LEN&quot;:&quot;5&quot;, &quot;ITM_INOUT_TP&quot;:&quot;INP&quot;, &quot;ITM_DEF_BSC_VL&quot;:&quot;${PF020}&quot;, &quot;NULL_CK&quot;:&quot;N&quot;, &quot;ORG_ID_CHECKED&quot;:true, &quot;ORG_ID&quot;:&quot;PF020&quot;}, {&quot;OPR_FLAG&quot;:&quot;U&quot;, &quot;REF_ITM_ID&quot;:&quot;NRU252&quot;, &quot;REF_ITM_NM&quot;:&quot;최근6개월내고객주요평잔1평균&quot;, &quot;REF_ITM_DAT_TP&quot;:&quot;NUM&quot;, &quot;REF_ITM_DAT_LEN&quot;:&quot;10&quot;, &quot;ITM_INOUT_TP&quot;:&quot;INP&quot;, &quot;ITM_DEF_BSC_VL&quot;:&quot;${PF020}&quot;, &quot;NULL_CK&quot;:&quot;N&quot;, &quot;ORG_ID_CHECKED&quot;:true, &quot;ORG_ID&quot;:&quot;NRU252&quot;}, {&quot;OPR_FLAG&quot;:&quot;U&quot;, &quot;REF_ITM_ID&quot;:&quot;C00000080&quot;, &quot;REF_ITM_NM&quot;:&quot;최초미해지신용개설일로부터의기간&quot;, &quot;REF_ITM_DAT_TP&quot;:&quot;ITG&quot;, &quot;REF_ITM_DAT_LEN&quot;:&quot;10&quot;, &quot;ITM_INOUT_TP&quot;:&quot;INP&quot;, &quot;ITM_DEF_BSC_VL&quot;:&quot;${C00000080}&quot;, &quot;NULL_CK&quot;:&quot;N&quot;, &quot;ORG_ID_CHECKED&quot;:true, &quot;ORG_ID&quot;:&quot;C00000080&quot;}, {&quot;OPR_FLAG&quot;:&quot;U&quot;, &quot;REF_ITM_ID&quot;:&quot;C11061000&quot;, &quot;REF_ITM_NM&quot;:&quot;최초미해지신용카드발급일로부터의기간&quot;, &quot;REF_ITM_DAT_TP&quot;:&quot;ITG&quot;, &quot;REF_ITM_DAT_LEN&quot;:&quot;10&quot;, &quot;ITM_INOUT_TP&quot;:&quot;INP&quot;, &quot;ITM_DEF_BSC_VL&quot;:&quot;${C11061000}&quot;, &quot;NULL_CK&quot;:&quot;N&quot;, &quot;ORG_ID_CHECKED&quot;:true, &quot;ORG_ID&quot;:&quot;C11061000&quot;}, {&quot;OPR_FLAG&quot;:&quot;U&quot;, &quot;REF_ITM_ID&quot;:&quot;CF0642112&quot;, &quot;REF_ITM_NM&quot;:&quot;최근6개월 신용카드 최고 현금서비스이용기관수(15일기준)(광주은행(카드)제외)&quot;, &quot;REF_ITM_DAT_TP&quot;:&quot;ITG&quot;, &quot;REF_ITM_DAT_LEN&quot;:&quot;10&quot;, &quot;ITM_INOUT_TP&quot;:&quot;INP&quot;, &quot;ITM_DEF_BSC_VL&quot;:&quot;${CF0642112}&quot;, &quot;NULL_CK&quot;:&quot;N&quot;, &quot;ORG_ID_CHECKED&quot;:true, &quot;ORG_ID&quot;:&quot;CF0642112&quot;}, {&quot;OPR_FLAG&quot;:&quot;U&quot;, &quot;REF_ITM_ID&quot;:&quot;CF0600903&quot;, &quot;REF_ITM_NM&quot;:&quot;최근6개월신용카드평균일시불이용률(15일기준)&quot;, &quot;REF_ITM_DAT_TP&quot;:&quot;NUM&quot;, &quot;REF_ITM_DAT_LEN&quot;:&quot;10&quot;, &quot;ITM_INOUT_TP&quot;:&quot;INP&quot;, &quot;ITM_DEF_BSC_VL&quot;:&quot;${CF0600903}&quot;, &quot;NULL_CK&quot;:&quot;N&quot;, &quot;ORG_ID_CHECKED&quot;:true, &quot;ORG_ID&quot;:&quot;CF0600903&quot;}, {&quot;OPR_FLAG&quot;:&quot;U&quot;, &quot;REF_ITM_ID&quot;:&quot;CF1200903&quot;, &quot;REF_ITM_NM&quot;:&quot;최근12개월신용카드평균일시불이용률(15일기준)&quot;, &quot;REF_ITM_DAT_TP&quot;:&quot;NUM&quot;, &quot;REF_ITM_DAT_LEN&quot;:&quot;10&quot;, &quot;ITM_INOUT_TP&quot;:&quot;INP&quot;, &quot;ITM_DEF_BSC_VL&quot;:&quot;${CF1200903}&quot;, &quot;NULL_CK&quot;:&quot;N&quot;, &quot;ORG_ID_CHECKED&quot;:true, &quot;ORG_ID&quot;:&quot;CF1200903&quot;}, {&quot;OPR_FLAG&quot;:&quot;U&quot;, &quot;REF_ITM_ID&quot;:&quot;CF1200612&quot;, &quot;REF_ITM_NM&quot;:&quot;최근12개월신용카드현금서비스이용월로부터경과개월수(15일기준)&quot;, &quot;REF_ITM_DAT_TP&quot;:&quot;ITG&quot;, &quot;REF_ITM_DAT_LEN&quot;:&quot;10&quot;, &quot;ITM_INOUT_TP&quot;:&quot;INP&quot;, &quot;ITM_DEF_BSC_VL&quot;:&quot;${CF1200612}&quot;, &quot;NULL_CK&quot;:&quot;N&quot;, &quot;ORG_ID_CHECKED&quot;:true, &quot;ORG_ID&quot;:&quot;CF1200612&quot;}, {&quot;OPR_FLAG&quot;:&quot;U&quot;, &quot;REF_ITM_ID&quot;:&quot;LC0099284&quot;, &quot;REF_ITM_NM&quot;:&quot;전은연미상환계좌별카드캐피탈저축은행대출총금액(신차할부, 예적금담보, 주택담보, 유가증권담보제외)&quot;, &quot;REF_ITM_DAT_TP&quot;:&quot;NUM&quot;, &quot;REF_ITM_DAT_LEN&quot;:&quot;10&quot;, &quot;ITM_INOUT_TP&quot;:&quot;INP&quot;, &quot;ITM_DEF_BSC_VL&quot;:&quot;${LC0099284}&quot;, &quot;NULL_CK&quot;:&quot;N&quot;, &quot;ORG_ID_CHECKED&quot;:true, &quot;ORG_ID&quot;:&quot;LC0099284&quot;}, {&quot;OPR_FLAG&quot;:&quot;U&quot;, &quot;REF_ITM_ID&quot;:&quot;LC1299101&quot;, &quot;REF_ITM_NM&quot;:&quot;전은연 계좌별 12개월 내 발생한 은행조합업권제외 대출 총 기관수(예적금담보/유가증권담보/주택담보/신차제외)&quot;, &quot;REF_ITM_DAT_TP&quot;:&quot;ITG&quot;, &quot;REF_ITM_DAT_LEN&quot;:&quot;10&quot;, &quot;ITM_INOUT_TP&quot;:&quot;INP&quot;, &quot;ITM_DEF_BSC_VL&quot;:&quot;${LC1299101}&quot;, &quot;NULL_CK&quot;:&quot;N&quot;, &quot;ORG_ID_CHECKED&quot;:true, &quot;ORG_ID&quot;:&quot;LC1299101&quot;}, {&quot;OPR_FLAG&quot;:&quot;U&quot;, &quot;REF_ITM_ID&quot;:&quot;KC1000033&quot;, &quot;REF_ITM_NM&quot;:&quot;최근3개월내비은행업권기업신용공여평균과목수(KFB기업신용)&quot;, &quot;REF_ITM_DAT_TP&quot;:&quot;ITG&quot;, &quot;REF_ITM_DAT_LEN&quot;:&quot;10&quot;, &quot;ITM_INOUT_TP&quot;:&quot;INP&quot;, &quot;ITM_DEF_BSC_VL&quot;:&quot;${KC1000033}&quot;, &quot;NULL_CK&quot;:&quot;N&quot;, &quot;ORG_ID_CHECKED&quot;:true, &quot;ORG_ID&quot;:&quot;KC1000033&quot;}, {&quot;OPR_FLAG&quot;:&quot;U&quot;, &quot;REF_ITM_ID&quot;:&quot;LC0025201&quot;, &quot;REF_ITM_NM&quot;:&quot;전은연미상환계좌별은행업권대출총금액&quot;, &quot;REF_ITM_DAT_TP&quot;:&quot;NUM&quot;, &quot;REF_ITM_DAT_LEN&quot;:&quot;10&quot;, &quot;ITM_INOUT_TP&quot;:&quot;INP&quot;, &quot;ITM_DEF_BSC_VL&quot;:&quot;${LC0025201}&quot;, &quot;NULL_CK&quot;:&quot;N&quot;, &quot;ORG_ID_CHECKED&quot;:true, &quot;ORG_ID&quot;:&quot;LC0025201&quot;}, {&quot;OPR_FLAG&quot;:&quot;U&quot;, &quot;REF_ITM_ID&quot;:&quot;TCBDLYS07&quot;, &quot;REF_ITM_NM&quot;:&quot;[TCB파생](통합연체)최근3개월총연체건수&quot;, &quot;REF_ITM_DAT_TP&quot;:&quot;ITG&quot;, &quot;REF_ITM_DAT_LEN&quot;:&quot;10&quot;, &quot;ITM_INOUT_TP&quot;:&quot;INP&quot;, &quot;ITM_DEF_BSC_VL&quot;:&quot;${TCBDLYS07}&quot;, &quot;NULL_CK&quot;:&quot;N&quot;, &quot;ORG_ID_CHECKED&quot;:true, &quot;ORG_ID&quot;:&quot;TCBDLYS07&quot;}, {&quot;OPR_FLAG&quot;:&quot;U&quot;, &quot;REF_ITM_ID&quot;:&quot;TCBDLYS12&quot;, &quot;REF_ITM_NM&quot;:&quot;[TCB파생](통합연체)최근12개월최장연체일수&quot;, &quot;REF_ITM_DAT_TP&quot;:&quot;ITG&quot;, &quot;REF_ITM_DAT_LEN&quot;:&quot;10&quot;, &quot;ITM_INOUT_TP&quot;:&quot;INP&quot;, &quot;ITM_DEF_BSC_VL&quot;:&quot;${TCBDLYS12}&quot;, &quot;NULL_CK&quot;:&quot;N&quot;, &quot;ORG_ID_CHECKED&quot;:true, &quot;ORG_ID&quot;:&quot;TCBDLYS12&quot;}, {&quot;OPR_FLAG&quot;:&quot;U&quot;, &quot;REF_ITM_ID&quot;:&quot;BASE00&quot;, &quot;REF_ITM_NM&quot;:&quot;스코어카드기본점수&quot;, &quot;REF_ITM_DAT_TP&quot;:&quot;NUM&quot;, &quot;REF_ITM_DAT_LEN&quot;:&quot;10&quot;, &quot;ITM_INOUT_TP&quot;:&quot;INP&quot;, &quot;ITM_DEF_BSC_VL&quot;:&quot;${BASE00}&quot;, &quot;NULL_CK&quot;:&quot;N&quot;, &quot;ORG_ID_CHECKED&quot;:true, &quot;ORG_ID&quot;:&quot;BASE00&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">192.168.57.224</stringProp>
            <stringProp name="HTTPSampler.port">8180</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/kais/scoreCard/updateTestDebugRunning.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.54 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="스코어점수여부 확인" enabled="true">
              <stringProp name="JSON_PATH">$.fullResultOutData.KOUT_RESULT.RESULT_OUTPUT.SCORE_POINT</stringProp>
              <stringProp name="EXPECTED_VALUE"></stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">true</boolProp>
              <boolProp name="INVERT">true</boolProp>
              <boolProp name="ISREGEX">false</boolProp>
            </JSONPathAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="NotUsedMetaItem" enabled="true">
          <stringProp name="dataSource">kaiswebdb</stringProp>
          <stringProp name="query">SELECT COUNT(REF_ID) AS Not_Used_Meta_Item_Count  
FROM KAIS52_REF_ITM
WHERE REF_ITM_ID  NOT IN (SELECT MET_DAT_SET_ITM_ID FROM KAIS21_MET_DAT_SET_ITM_DTL)
</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultVariable">Not_Used_Meta_Item_Count  </stringProp>
          <stringProp name="variableNames"></stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="SameItemNameButTypeIsNot" enabled="true">
          <stringProp name="dataSource">kaiswebdb</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT COUNT(A.REF_ID)  AS Same_Item_Name_But_Type_Is_Not_Count
FROM (SELECT REF_ID , REF_ITM_ID , ref_itm_dat_tp FROM KAIS52_REF_ITM) A,
	 (SELECT REF_ID , REF_ITM_ID , ref_itm_dat_tp FROM KAIS52_REF_ITM) B 
WHERE A.REF_ITM_ID = B.REF_ITM_ID
AND   A.REF_ITM_DAT_TP != B.REF_ITM_DAT_TP 
AND (
		(
			A.ref_itm_dat_tp IN (&apos;NUM&apos;,&apos;ITG&apos;) 
			AND 
			B.ref_itm_dat_tp IN (&apos;STR&apos;)
		)    
		OR 
		(
			A.ref_itm_dat_tp IN (&apos;STR&apos;) 
			AND 
			B.ref_itm_dat_tp IN (&apos;NUM&apos;,&apos;ITG&apos;)
		)    
	)
</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable">Same_Item_Name_But_Type_Is_Not_Count</stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="NotUsedRefObject" enabled="true">
          <stringProp name="dataSource">kaiswebdb</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT COUNT(STGY_SET_ID) AS Not_Used_Ref_Object_Count 
FROM KAIS60_STGY_SET_MAIN 
WHERE STGY_SET_ID NOT IN 
(
 SELECT STGY_SET_ID FROM KAIS62_DCS_FUNC_DTL
 UNION ALL 
 SELECT STGY_SET_ID FROM KAIS62_DCS_OBJ_DTL
 UNION ALL 
 SELECT STGY_SET_ID FROM KAIS62_DCS_SCRT_DTL
 UNION ALL 
 SELECT STGY_SET_ID FROM KAIS62_FORK_OBJ_DTL
 UNION ALL 
 SELECT STGY_SET_ID FROM KAIS62_MAIN_OBJ_DTL
 UNION ALL 
 SELECT STGY_SET_ID FROM KAIS65_ENTRY_ACT_ITM_DTL
 UNION ALL 
 SELECT STGY_SET_ID FROM KAIS65_ENTRY_MAIN
 UNION ALL 
 SELECT SCOR_CRD_ID FROM KAIS50_SCOR_CRD_MAIN
 UNION ALL 
 SELECT SCOR_CRD_ID FROM KAIS51_SCOR_CRD_SEG
 UNION ALL 
 SELECT SCOR_CRD_ID FROM KAIS53_SCOR_CRD_SEG_SPRT_CND
 UNION ALL 
 SELECT SCOR_CRD_ID FROM KAIS53_SCOR_CRD_SEG_US_ITM
 UNION ALL 
 SELECT SCOR_CRD_ID FROM KAIS54_SCOR_CRD_BINN_DTL
 UNION ALL 
 SELECT SCOR_CRD_ID FROM KAIS54_SCOR_CRD_DYNAMIC_ITEM
 UNION ALL 
 SELECT SCOR_CRD_ID FROM KAIS55_SCOR_CRD_GD_RULE
 UNION ALL 
 SELECT SCOR_CRD_ID FROM KAIS55_SCOR_CRD_GD_RULE_DTL
 UNION ALL 
 SELECT SCOR_CRD_ID FROM KAIS57_SCOR_CRD_RSN
 )
</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable">Not_Used_Ref_Object_Count</stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="NotUsedDecisionFunction" enabled="true">
          <stringProp name="dataSource">kaiswebdb</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT COUNT(A.STGY_SET_ID) AS Not_Used_Decision_Function_Count
FROM KAIS61_STGY_SET_OBJ A LEFT OUTER JOIN KAIS62_DCS_FUNC_DTL B 
	 ON A.STGY_SET_ID  = B.STGY_SET_ID 
	 AND A.OBJ_TP = B.OBJ_TP 
	 AND A.OBJ_ID = B.OBJ_ID 
WHERE A.OBJ_TP  IN (&apos;DF&apos;)
AND   B.OBJ_ID IS NULL</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable">Not_Used_Decision_Function_Count</stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="NotUsedDM_DT_TR" enabled="true">
          <stringProp name="dataSource">kaiswebdb</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT COUNT(A.STGY_SET_ID) AS Not_Used_DM_DT_TR_Count
FROM KAIS61_STGY_SET_OBJ A LEFT OUTER JOIN KAIS62_DCS_OBJ_DTL B 
	 ON A.STGY_SET_ID  = B.STGY_SET_ID 
	 AND A.OBJ_TP = B.OBJ_TP 
	 AND A.OBJ_ID = B.OBJ_ID 
WHERE A.OBJ_TP IN (&apos;DM&apos;,&apos;TR&apos;,&apos;DT&apos;)
AND   B.OBJ_ID IS NULL </stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable">Not_Used_DM_DT_TR_Count</stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="NotUsedFork" enabled="true">
          <stringProp name="dataSource">kaiswebdb</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT COUNT(A.STGY_SET_ID) AS Not_Used_Fork_Count
FROM KAIS61_STGY_SET_OBJ A LEFT OUTER JOIN KAIS62_FORK_OBJ_DTL B 
	 ON A.STGY_SET_ID  = B.STGY_SET_ID 
	 AND A.OBJ_TP = B.OBJ_TP 
	 AND A.OBJ_ID = B.OBJ_ID 
WHERE A.OBJ_TP IN (&apos;FK&apos;)
AND   B.OBJ_ID IS NULL </stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable">Not_Used_Fork_Count</stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="NotUsedDS" enabled="true">
          <stringProp name="dataSource">kaiswebdb</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT COUNT(A.STGY_SET_ID) AS Not_Used_DS_Count
FROM KAIS61_STGY_SET_OBJ A LEFT OUTER JOIN KAIS62_DCS_SCRT_DTL B 
	 ON A.STGY_SET_ID  = B.STGY_SET_ID 
	 AND A.OBJ_TP = B.OBJ_TP 
	 AND A.OBJ_ID = B.OBJ_ID 
WHERE A.OBJ_TP IN (&apos;DS&apos;)
AND   B.OBJ_ID IS NULL </stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable">Not_Used_DS_Count</stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="NotUsedScoreCardStrategySet" enabled="true">
          <stringProp name="dataSource">kaiswebdb</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT COUNT(A.STGY_SET_ID) AS  Not_Used_Score_Card_Strategy_Set_Count
FROM KAIS61_STGY_SET_OBJ A LEFT OUTER JOIN KAIS62_MAIN_OBJ_DTL B 
	 ON A.STGY_SET_ID  = B.STGY_SET_ID 
	 AND A.OBJ_TP = B.OBJ_TP 
	 AND A.OBJ_ID = B.OBJ_ID 
WHERE A.OBJ_TP IN (&apos;SS&apos;,&apos;SC&apos;)
AND   B.OBJ_ID IS NULL </stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable">Not_Used_Score_Card_Strategy_Set_Count</stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <RecordingController guiclass="RecordController" testclass="RecordingController" testname="전략 셋 건별 테스트" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/kais/ruleManagement/readComRuleAuthMgrGrt.do-1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="REF_ID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">REF_ID</stringProp>
                  <stringProp name="Argument.value">SS00000217</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">192.168.57.224</stringProp>
            <stringProp name="HTTPSampler.port">8180</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/kais/ruleManagement/readComRuleAuthMgrGrt.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://192.168.57.224:8180/kais/ruleManagement/readStrgMngmMain.do</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">http://192.168.57.224:8180</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.67 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/kais/ruleManagement/readStrgMngmBascInfo.do-2" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="stgySetId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">stgySetId</stringProp>
                  <stringProp name="Argument.value">SS00000217</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">192.168.57.224</stringProp>
            <stringProp name="HTTPSampler.port">8180</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/kais/ruleManagement/readStrgMngmBascInfo.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://192.168.57.224:8180/kais/ruleManagement/readStrgMngmMain.do</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.67 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/kais/ruleManagement/readStrgMngmRuleFlow.do-3" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="stgySetId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">stgySetId</stringProp>
                  <stringProp name="Argument.value">SS00000217</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">192.168.57.224</stringProp>
            <stringProp name="HTTPSampler.port">8180</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/kais/ruleManagement/readStrgMngmRuleFlow.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://192.168.57.224:8180/kais/ruleManagement/readStrgMngmMain.do</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.67 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/kais/ruleManagement/readComRuleAuthMgrGrt.do-5" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="REF_ID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">REF_ID</stringProp>
                  <stringProp name="Argument.value">SS00000217</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">192.168.57.224</stringProp>
            <stringProp name="HTTPSampler.port">8180</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/kais/ruleManagement/readComRuleAuthMgrGrt.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://192.168.57.224:8180/kais/ruleManagement/readStrgMngmMain.do</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">http://192.168.57.224:8180</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.67 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/kais/ruleManagement/readComBackup.do-4" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="REF_ID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">REF_ID</stringProp>
                  <stringProp name="Argument.value">SS00000217</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="REF_TP" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">REF_TP</stringProp>
                  <stringProp name="Argument.value">MAINSTG</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="rowStart" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rowStart</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="rowEnd" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rowEnd</stringProp>
                  <stringProp name="Argument.value">5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">192.168.57.224</stringProp>
            <stringProp name="HTTPSampler.port">8180</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/kais/ruleManagement/readComBackup.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://192.168.57.224:8180/kais/ruleManagement/readStrgMngmMain.do</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">http://192.168.57.224:8180</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.67 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/kais/ruleManagement/readComRuleAuthMgr.do-6" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="REF_ID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">REF_ID</stringProp>
                  <stringProp name="Argument.value">SS00000217</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">192.168.57.224</stringProp>
            <stringProp name="HTTPSampler.port">8180</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/kais/ruleManagement/readComRuleAuthMgr.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://192.168.57.224:8180/kais/ruleManagement/readStrgMngmMain.do</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">http://192.168.57.224:8180</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.67 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/kais/ruleManagement/readCaseTestList.do-7" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="stgySetId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">stgySetId</stringProp>
                  <stringProp name="Argument.value">SS00000217</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">192.168.57.224</stringProp>
            <stringProp name="HTTPSampler.port">8180</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/kais/ruleManagement/readCaseTestList.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://192.168.57.224:8180/kais/ruleManagement/readStrgMngmMain.do</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">http://192.168.57.224:8180</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.67 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/kais/ruleManagement/readComRuleAuthMgrGrt.do-8" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="REF_ID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">REF_ID</stringProp>
                  <stringProp name="Argument.value">SS00000217</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">192.168.57.224</stringProp>
            <stringProp name="HTTPSampler.port">8180</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/kais/ruleManagement/readComRuleAuthMgrGrt.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://192.168.57.224:8180/kais/ruleManagement/readStrgMngmMain.do</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">http://192.168.57.224:8180</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.67 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/kais/ruleManagement/readStrgMngmRuleFlow.do-9" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="stgySetId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">stgySetId</stringProp>
                  <stringProp name="Argument.value">SS00000217</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">192.168.57.224</stringProp>
            <stringProp name="HTTPSampler.port">8180</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/kais/ruleManagement/readStrgMngmRuleFlow.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://192.168.57.224:8180/kais/ruleManagement/readStrgMngmMain.do</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.67 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/kais/ruleManagement/readRefIdChk.do-10" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="stgySetId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">stgySetId</stringProp>
                  <stringProp name="Argument.value">SS00000217</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="dataList" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dataList</stringProp>
                  <stringProp name="Argument.value">[{&quot;path&quot;:&quot;ED&quot;,&quot;loc&quot;:&quot;427.0000000000001 284.00000000000017&quot;,&quot;name&quot;:&quot;End Name #1&quot;,&quot;category&quot;:&quot;End&quot;,&quot;key&quot;:&quot;ED&quot;,&quot;desc&quot;:&quot;&quot;,&quot;__gohashid&quot;:19492},{&quot;path&quot;:&quot;SC&quot;,&quot;loc&quot;:&quot;268.1026714512644 147.86306549718137&quot;,&quot;name&quot;:&quot;(비대면전체)모형산출&quot;,&quot;category&quot;:&quot;&quot;,&quot;key&quot;:&quot;SC_ID&quot;,&quot;desc&quot;:&quot;FG_B&quot;,&quot;__gohashid&quot;:19493},{&quot;path&quot;:&quot;SC&quot;,&quot;loc&quot;:&quot;268.1026714512644 237.86306549718137&quot;,&quot;name&quot;:&quot;(Near-Prime)모형산출&quot;,&quot;category&quot;:&quot;&quot;,&quot;key&quot;:&quot;SC_ID2&quot;,&quot;desc&quot;:&quot;FG_JBN&quot;,&quot;__gohashid&quot;:19494},{&quot;path&quot;:&quot;SC&quot;,&quot;loc&quot;:&quot;268.1026714512644 327.86306549718137&quot;,&quot;name&quot;:&quot;(Prime)모형산출&quot;,&quot;category&quot;:&quot;&quot;,&quot;key&quot;:&quot;SC_ID3&quot;,&quot;desc&quot;:&quot;FG_JBP&quot;,&quot;__gohashid&quot;:19495},{&quot;path&quot;:&quot;SC&quot;,&quot;loc&quot;:&quot;268.1026714512644 420.86306549718137&quot;,&quot;name&quot;:&quot;(SOHO)모형산출&quot;,&quot;category&quot;:&quot;&quot;,&quot;key&quot;:&quot;SC_ID4&quot;,&quot;desc&quot;:&quot;FG_S&quot;,&quot;__gohashid&quot;:19496},{&quot;path&quot;:&quot;SS&quot;,&quot;loc&quot;:&quot;117.10267145126443 299.86306549718137&quot;,&quot;name&quot;:&quot;비대면모형 복합항목&quot;,&quot;category&quot;:&quot;&quot;,&quot;key&quot;:&quot;SS_ID&quot;,&quot;desc&quot;:&quot;SS_62C6_C93D&quot;,&quot;__gohashid&quot;:19497},{&quot;path&quot;:&quot;ST&quot;,&quot;loc&quot;:&quot;.0 300.0&quot;,&quot;name&quot;:&quot;Start Name #1&quot;,&quot;category&quot;:&quot;Start&quot;,&quot;key&quot;:&quot;ST&quot;,&quot;desc&quot;:&quot;&quot;,&quot;__gohashid&quot;:19498}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">192.168.57.224</stringProp>
            <stringProp name="HTTPSampler.port">8180</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/kais/ruleManagement/readRefIdChk.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://192.168.57.224:8180/kais/ruleManagement/readStrgMngmMain.do</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">http://192.168.57.224:8180</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.67 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/kais/ruleManagement/readRefIdChk.do-11" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="stgySetId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">stgySetId</stringProp>
                  <stringProp name="Argument.value">SS00000217</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="dataList" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dataList</stringProp>
                  <stringProp name="Argument.value">[{&quot;path&quot;:&quot;ED&quot;,&quot;loc&quot;:&quot;427.0000000000001 284.00000000000017&quot;,&quot;name&quot;:&quot;End Name #1&quot;,&quot;category&quot;:&quot;End&quot;,&quot;key&quot;:&quot;ED&quot;,&quot;desc&quot;:&quot;&quot;,&quot;__gohashid&quot;:19492},{&quot;path&quot;:&quot;SC&quot;,&quot;loc&quot;:&quot;268.1026714512644 147.86306549718137&quot;,&quot;name&quot;:&quot;(비대면전체)모형산출&quot;,&quot;category&quot;:&quot;&quot;,&quot;key&quot;:&quot;SC_ID&quot;,&quot;desc&quot;:&quot;FG_B&quot;,&quot;__gohashid&quot;:19493},{&quot;path&quot;:&quot;SC&quot;,&quot;loc&quot;:&quot;268.1026714512644 237.86306549718137&quot;,&quot;name&quot;:&quot;(Near-Prime)모형산출&quot;,&quot;category&quot;:&quot;&quot;,&quot;key&quot;:&quot;SC_ID2&quot;,&quot;desc&quot;:&quot;FG_JBN&quot;,&quot;__gohashid&quot;:19494},{&quot;path&quot;:&quot;SC&quot;,&quot;loc&quot;:&quot;268.1026714512644 327.86306549718137&quot;,&quot;name&quot;:&quot;(Prime)모형산출&quot;,&quot;category&quot;:&quot;&quot;,&quot;key&quot;:&quot;SC_ID3&quot;,&quot;desc&quot;:&quot;FG_JBP&quot;,&quot;__gohashid&quot;:19495},{&quot;path&quot;:&quot;SC&quot;,&quot;loc&quot;:&quot;268.1026714512644 420.86306549718137&quot;,&quot;name&quot;:&quot;(SOHO)모형산출&quot;,&quot;category&quot;:&quot;&quot;,&quot;key&quot;:&quot;SC_ID4&quot;,&quot;desc&quot;:&quot;FG_S&quot;,&quot;__gohashid&quot;:19496},{&quot;path&quot;:&quot;SS&quot;,&quot;loc&quot;:&quot;117.10267145126443 299.86306549718137&quot;,&quot;name&quot;:&quot;비대면모형 복합항목&quot;,&quot;category&quot;:&quot;&quot;,&quot;key&quot;:&quot;SS_ID&quot;,&quot;desc&quot;:&quot;SS_62C6_C93D&quot;,&quot;__gohashid&quot;:19497},{&quot;path&quot;:&quot;ST&quot;,&quot;loc&quot;:&quot;.0 300.0&quot;,&quot;name&quot;:&quot;Start Name #1&quot;,&quot;category&quot;:&quot;Start&quot;,&quot;key&quot;:&quot;ST&quot;,&quot;desc&quot;:&quot;&quot;,&quot;__gohashid&quot;:19498}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">192.168.57.224</stringProp>
            <stringProp name="HTTPSampler.port">8180</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/kais/ruleManagement/readRefIdChk.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://192.168.57.224:8180/kais/ruleManagement/readStrgMngmMain.do</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">http://192.168.57.224:8180</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.67 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/kais/ruleManagement/readCaseTestResult.do-12" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="stgySetId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">stgySetId</stringProp>
                  <stringProp name="Argument.value">SS00000217</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="stgySetDs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">stgySetDs</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="gridData" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">gridData</stringProp>
                  <stringProp name="Argument.value">[{&quot;testValueKey&quot;:&quot;ID&quot;, &quot;testValue&quot;:&quot;${ID}&quot;}, {&quot;testValueKey&quot;:&quot;STDAY&quot;, &quot;testValue&quot;:&quot;${STDAY}&quot;}, {&quot;testValueKey&quot;:&quot;TOTAL_SCR&quot;, &quot;testValue&quot;:&quot;${TOTAL_SCR}&quot;}, {&quot;testValueKey&quot;:&quot;NEAR_PRIME&quot;, &quot;testValue&quot;:&quot;${NEAR_PRIME}&quot;}, {&quot;testValueKey&quot;:&quot;PRIME&quot;, &quot;testValue&quot;:&quot;${PRIME}&quot;}, {&quot;testValueKey&quot;:&quot;BDM_SOHO_SCR&quot;, &quot;testValue&quot;:&quot;${BDM_SOHO_SCR}&quot;}, {&quot;testValueKey&quot;:&quot;TOTAL_GRD&quot;, &quot;testValue&quot;:&quot;${TOTAL_GRD}&quot;}, {&quot;testValueKey&quot;:&quot;NEAR_PRIME_GRD&quot;, &quot;testValue&quot;:&quot;${NEAR_PRIME_GRD}&quot;}, {&quot;testValueKey&quot;:&quot;PRIME_GRD&quot;, &quot;testValue&quot;:&quot;${PRIME_GRD}&quot;}, {&quot;testValueKey&quot;:&quot;L20231O00&quot;, &quot;testValue&quot;:&quot;${L20231O00}&quot;}, {&quot;testValueKey&quot;:&quot;C1Z001405&quot;, &quot;testValue&quot;:&quot;${C1Z001405}&quot;}, {&quot;testValueKey&quot;:&quot;C1L120250&quot;, &quot;testValue&quot;:&quot;${C1L120250}&quot;}, {&quot;testValueKey&quot;:&quot;AL012G020&quot;, &quot;testValue&quot;:&quot;${AL012G020}&quot;}, {&quot;testValueKey&quot;:&quot;C20172001&quot;, &quot;testValue&quot;:&quot;${C20172001}&quot;}, {&quot;testValueKey&quot;:&quot;L2Z001291&quot;, &quot;testValue&quot;:&quot;${L2Z001291}&quot;}, {&quot;testValueKey&quot;:&quot;AL012G018&quot;, &quot;testValue&quot;:&quot;${AL012G018}&quot;}, {&quot;testValueKey&quot;:&quot;L9023C200&quot;, &quot;testValue&quot;:&quot;${L9023C200}&quot;}, {&quot;testValueKey&quot;:&quot;C1L120161&quot;, &quot;testValue&quot;:&quot;${C1L120161}&quot;}, {&quot;testValueKey&quot;:&quot;L10173000&quot;, &quot;testValue&quot;:&quot;${L10173000}&quot;}, {&quot;testValueKey&quot;:&quot;U81102010&quot;, &quot;testValue&quot;:&quot;${U81102010}&quot;}, {&quot;testValueKey&quot;:&quot;L2Z001075&quot;, &quot;testValue&quot;:&quot;${L2Z001075}&quot;}, {&quot;testValueKey&quot;:&quot;D10132D0N&quot;, &quot;testValue&quot;:&quot;${D10132D0N}&quot;}, {&quot;testValueKey&quot;:&quot;D10175D0T&quot;, &quot;testValue&quot;:&quot;${D10175D0T}&quot;}, {&quot;testValueKey&quot;:&quot;L101AHW06&quot;, &quot;testValue&quot;:&quot;${L101AHW06}&quot;}, {&quot;testValueKey&quot;:&quot;L2Z001014&quot;, &quot;testValue&quot;:&quot;${L2Z001014}&quot;}, {&quot;testValueKey&quot;:&quot;L1Z000961&quot;, &quot;testValue&quot;:&quot;${L1Z000961}&quot;}, {&quot;testValueKey&quot;:&quot;U81201010&quot;, &quot;testValue&quot;:&quot;${U81201010}&quot;}, {&quot;testValueKey&quot;:&quot;L9Z000271&quot;, &quot;testValue&quot;:&quot;${L9Z000271}&quot;}, {&quot;testValueKey&quot;:&quot;L2M000026&quot;, &quot;testValue&quot;:&quot;${L2M000026}&quot;}, {&quot;testValueKey&quot;:&quot;C23282000&quot;, &quot;testValue&quot;:&quot;${C23282000}&quot;}, {&quot;testValueKey&quot;:&quot;L2Z001212&quot;, &quot;testValue&quot;:&quot;${L2Z001212}&quot;}, {&quot;testValueKey&quot;:&quot;D10310608&quot;, &quot;testValue&quot;:&quot;${D10310608}&quot;}, {&quot;testValueKey&quot;:&quot;AS136G006&quot;, &quot;testValue&quot;:&quot;${AS136G006}&quot;}, {&quot;testValueKey&quot;:&quot;AL012G017&quot;, &quot;testValue&quot;:&quot;${AL012G017}&quot;}, {&quot;testValueKey&quot;:&quot;L2X000026&quot;, &quot;testValue&quot;:&quot;${L2X000026}&quot;}, {&quot;testValueKey&quot;:&quot;L2Z000207&quot;, &quot;testValue&quot;:&quot;${L2Z000207}&quot;}, {&quot;testValueKey&quot;:&quot;L2Z001222&quot;, &quot;testValue&quot;:&quot;${L2Z001222}&quot;}, {&quot;testValueKey&quot;:&quot;D1013AD0T&quot;, &quot;testValue&quot;:&quot;${D1013AD0T}&quot;}, {&quot;testValueKey&quot;:&quot;L2Z001221&quot;, &quot;testValue&quot;:&quot;${L2Z001221}&quot;}, {&quot;testValueKey&quot;:&quot;C1Z001117&quot;, &quot;testValue&quot;:&quot;${C1Z001117}&quot;}, {&quot;testValueKey&quot;:&quot;C1L120331&quot;, &quot;testValue&quot;:&quot;${C1L120331}&quot;}, {&quot;testValueKey&quot;:&quot;D10132D0T&quot;, &quot;testValue&quot;:&quot;${D10132D0T}&quot;}, {&quot;testValueKey&quot;:&quot;L1Z000929&quot;, &quot;testValue&quot;:&quot;${L1Z000929}&quot;}, {&quot;testValueKey&quot;:&quot;C1P000011&quot;, &quot;testValue&quot;:&quot;${C1P000011}&quot;}, {&quot;testValueKey&quot;:&quot;C1Z001364&quot;, &quot;testValue&quot;:&quot;${C1Z001364}&quot;}, {&quot;testValueKey&quot;:&quot;L2Z000208&quot;, &quot;testValue&quot;:&quot;${L2Z000208}&quot;}, {&quot;testValueKey&quot;:&quot;C1N235W1P&quot;, &quot;testValue&quot;:&quot;${C1N235W1P}&quot;}, {&quot;testValueKey&quot;:&quot;L2Z001268&quot;, &quot;testValue&quot;:&quot;${L2Z001268}&quot;}, {&quot;testValueKey&quot;:&quot;L2Z000199&quot;, &quot;testValue&quot;:&quot;${L2Z000199}&quot;}, {&quot;testValueKey&quot;:&quot;L1Z000803&quot;, &quot;testValue&quot;:&quot;${L1Z000803}&quot;}, {&quot;testValueKey&quot;:&quot;L1Z000381&quot;, &quot;testValue&quot;:&quot;${L1Z000381}&quot;}, {&quot;testValueKey&quot;:&quot;D1013AD0N&quot;, &quot;testValue&quot;:&quot;${D1013AD0N}&quot;}, {&quot;testValueKey&quot;:&quot;D1017500K&quot;, &quot;testValue&quot;:&quot;${D1017500K}&quot;}, {&quot;testValueKey&quot;:&quot;L10217000&quot;, &quot;testValue&quot;:&quot;${L10217000}&quot;}, {&quot;testValueKey&quot;:&quot;C1Z001340&quot;, &quot;testValue&quot;:&quot;${C1Z001340}&quot;}, {&quot;testValueKey&quot;:&quot;L10210000&quot;, &quot;testValue&quot;:&quot;${L10210000}&quot;}, {&quot;testValueKey&quot;:&quot;L1Z000962&quot;, &quot;testValue&quot;:&quot;${L1Z000962}&quot;}, {&quot;testValueKey&quot;:&quot;L2Z000198&quot;, &quot;testValue&quot;:&quot;${L2Z000198}&quot;}, {&quot;testValueKey&quot;:&quot;C1Z001190&quot;, &quot;testValue&quot;:&quot;${C1Z001190}&quot;}, {&quot;testValueKey&quot;:&quot;AH40D0004&quot;, &quot;testValue&quot;:&quot;${AH40D0004}&quot;}, {&quot;testValueKey&quot;:&quot;AH1020015&quot;, &quot;testValue&quot;:&quot;${AH1020015}&quot;}, {&quot;testValueKey&quot;:&quot;AH40C0008&quot;, &quot;testValue&quot;:&quot;${AH40C0008}&quot;}, {&quot;testValueKey&quot;:&quot;AL0C00004&quot;, &quot;testValue&quot;:&quot;${AL0C00004}&quot;}, {&quot;testValueKey&quot;:&quot;AS01DG001&quot;, &quot;testValue&quot;:&quot;${AS01DG001}&quot;}, {&quot;testValueKey&quot;:&quot;AL012G005&quot;, &quot;testValue&quot;:&quot;${AL012G005}&quot;}, {&quot;testValueKey&quot;:&quot;C1N228000&quot;, &quot;testValue&quot;:&quot;${C1N228000}&quot;}, {&quot;testValueKey&quot;:&quot;AS1DD0002&quot;, &quot;testValue&quot;:&quot;${AS1DD0002}&quot;}, {&quot;testValueKey&quot;:&quot;C18133006&quot;, &quot;testValue&quot;:&quot;${C18133006}&quot;}, {&quot;testValueKey&quot;:&quot;L2Z000177&quot;, &quot;testValue&quot;:&quot;${L2Z000177}&quot;}, {&quot;testValueKey&quot;:&quot;AL0C00001&quot;, &quot;testValue&quot;:&quot;${AL0C00001}&quot;}, {&quot;testValueKey&quot;:&quot;AH40D0002&quot;, &quot;testValue&quot;:&quot;${AH40D0002}&quot;}, {&quot;testValueKey&quot;:&quot;LA1000071&quot;, &quot;testValue&quot;:&quot;${LA1000071}&quot;}, {&quot;testValueKey&quot;:&quot;AH1020017&quot;, &quot;testValue&quot;:&quot;${AH1020017}&quot;}, {&quot;testValueKey&quot;:&quot;AS120G001&quot;, &quot;testValue&quot;:&quot;${AS120G001}&quot;}, {&quot;testValueKey&quot;:&quot;C1N128006&quot;, &quot;testValue&quot;:&quot;${C1N128006}&quot;}, {&quot;testValueKey&quot;:&quot;C1Z200001&quot;, &quot;testValue&quot;:&quot;${C1Z200001}&quot;}, {&quot;testValueKey&quot;:&quot;D10175006&quot;, &quot;testValue&quot;:&quot;${D10175006}&quot;}, {&quot;testValueKey&quot;:&quot;C20220006&quot;, &quot;testValue&quot;:&quot;${C20220006}&quot;}, {&quot;testValueKey&quot;:&quot;L2X000031&quot;, &quot;testValue&quot;:&quot;${L2X000031}&quot;}, {&quot;testValueKey&quot;:&quot;AH40C0014&quot;, &quot;testValue&quot;:&quot;${AH40C0014}&quot;}, {&quot;testValueKey&quot;:&quot;L2Z000223&quot;, &quot;testValue&quot;:&quot;${L2Z000223}&quot;}, {&quot;testValueKey&quot;:&quot;D10110000&quot;, &quot;testValue&quot;:&quot;${D10110000}&quot;}, {&quot;testValueKey&quot;:&quot;L2M000112&quot;, &quot;testValue&quot;:&quot;${L2M000112}&quot;}, {&quot;testValueKey&quot;:&quot;C1N239000&quot;, &quot;testValue&quot;:&quot;${C1N239000}&quot;}, {&quot;testValueKey&quot;:&quot;C1M2B3W0C&quot;, &quot;testValue&quot;:&quot;${C1M2B3W0C}&quot;}, {&quot;testValueKey&quot;:&quot;C1N2A3W06&quot;, &quot;testValue&quot;:&quot;${C1N2A3W06}&quot;}, {&quot;testValueKey&quot;:&quot;C1N2B6W0C&quot;, &quot;testValue&quot;:&quot;${C1N2B6W0C}&quot;}, {&quot;testValueKey&quot;:&quot;D1017500N&quot;, &quot;testValue&quot;:&quot;${D1017500N}&quot;}, {&quot;testValueKey&quot;:&quot;C1813300C&quot;, &quot;testValue&quot;:&quot;${C1813300C}&quot;}, {&quot;testValueKey&quot;:&quot;D10175000&quot;, &quot;testValue&quot;:&quot;${D10175000}&quot;}, {&quot;testValueKey&quot;:&quot;C1N2B5W06&quot;, &quot;testValue&quot;:&quot;${C1N2B5W06}&quot;}, {&quot;testValueKey&quot;:&quot;L2M000021&quot;, &quot;testValue&quot;:&quot;${L2M000021}&quot;}, {&quot;testValueKey&quot;:&quot;C1N2B5W0C&quot;, &quot;testValue&quot;:&quot;${C1N2B5W0C}&quot;}, {&quot;testValueKey&quot;:&quot;C1M237W3P&quot;, &quot;testValue&quot;:&quot;${C1M237W3P}&quot;}, {&quot;testValueKey&quot;:&quot;D10110003&quot;, &quot;testValue&quot;:&quot;${D10110003}&quot;}, {&quot;testValueKey&quot;:&quot;L2Z001247&quot;, &quot;testValue&quot;:&quot;${L2Z001247}&quot;}, {&quot;testValueKey&quot;:&quot;C1N238000&quot;, &quot;testValue&quot;:&quot;${C1N238000}&quot;}, {&quot;testValueKey&quot;:&quot;C1M2B3W06&quot;, &quot;testValue&quot;:&quot;${C1M2B3W06}&quot;}, {&quot;testValueKey&quot;:&quot;L2Z001246&quot;, &quot;testValue&quot;:&quot;${L2Z001246}&quot;}, {&quot;testValueKey&quot;:&quot;C1N2A3W03&quot;, &quot;testValue&quot;:&quot;${C1N2A3W03}&quot;}, {&quot;testValueKey&quot;:&quot;L2Z001245&quot;, &quot;testValue&quot;:&quot;${L2Z001245}&quot;}, {&quot;testValueKey&quot;:&quot;C1N2B6W06&quot;, &quot;testValue&quot;:&quot;${C1N2B6W06}&quot;}, {&quot;testValueKey&quot;:&quot;L2Z001244&quot;, &quot;testValue&quot;:&quot;${L2Z001244}&quot;}, {&quot;testValueKey&quot;:&quot;DA0D00001&quot;, &quot;testValue&quot;:&quot;${DA0D00001}&quot;}, {&quot;testValueKey&quot;:&quot;C1Z000816&quot;, &quot;testValue&quot;:&quot;${C1Z000816}&quot;}, {&quot;testValueKey&quot;:&quot;L2Z000247&quot;, &quot;testValue&quot;:&quot;${L2Z000247}&quot;}, {&quot;testValueKey&quot;:&quot;C1M237W1P&quot;, &quot;testValue&quot;:&quot;${C1M237W1P}&quot;}, {&quot;testValueKey&quot;:&quot;L2Z000996&quot;, &quot;testValue&quot;:&quot;${L2Z000996}&quot;}, {&quot;testValueKey&quot;:&quot;L2Z000998&quot;, &quot;testValue&quot;:&quot;${L2Z000998}&quot;}, {&quot;testValueKey&quot;:&quot;DD0140X16&quot;, &quot;testValue&quot;:&quot;${DD0140X16}&quot;}, {&quot;testValueKey&quot;:&quot;C1Z000946&quot;, &quot;testValue&quot;:&quot;${C1Z000946}&quot;}, {&quot;testValueKey&quot;:&quot;C1Z000753&quot;, &quot;testValue&quot;:&quot;${C1Z000753}&quot;}, {&quot;testValueKey&quot;:&quot;C1Z001038&quot;, &quot;testValue&quot;:&quot;${C1Z001038}&quot;}, {&quot;testValueKey&quot;:&quot;C1L120301&quot;, &quot;testValue&quot;:&quot;${C1L120301}&quot;}, {&quot;testValueKey&quot;:&quot;SI00000Z0&quot;, &quot;testValue&quot;:&quot;${SI00000Z0}&quot;}, {&quot;testValueKey&quot;:&quot;SD00000Z0&quot;, &quot;testValue&quot;:&quot;${SD00000Z0}&quot;}, {&quot;testValueKey&quot;:&quot;S8R2000Z0&quot;, &quot;testValue&quot;:&quot;${S8R2000Z0}&quot;}, {&quot;testValueKey&quot;:&quot;U93070000&quot;, &quot;testValue&quot;:&quot;${U93070000}&quot;}, {&quot;testValueKey&quot;:&quot;AH4060008&quot;, &quot;testValue&quot;:&quot;${AH4060008}&quot;}, {&quot;testValueKey&quot;:&quot;D1017500T&quot;, &quot;testValue&quot;:&quot;${D1017500T}&quot;}, {&quot;testValueKey&quot;:&quot;DD0140X1C&quot;, &quot;testValue&quot;:&quot;${DD0140X1C}&quot;}, {&quot;testValueKey&quot;:&quot;DDC006003&quot;, &quot;testValue&quot;:&quot;${DDC006003}&quot;}, {&quot;testValueKey&quot;:&quot;L2Z001088&quot;, &quot;testValue&quot;:&quot;${L2Z001088}&quot;}, {&quot;testValueKey&quot;:&quot;C1N2A6W03&quot;, &quot;testValue&quot;:&quot;${C1N2A6W03}&quot;}, {&quot;testValueKey&quot;:&quot;L2M000011&quot;, &quot;testValue&quot;:&quot;${L2M000011}&quot;}, {&quot;testValueKey&quot;:&quot;L2Z000957&quot;, &quot;testValue&quot;:&quot;${L2Z000957}&quot;}, {&quot;testValueKey&quot;:&quot;L2M000013&quot;, &quot;testValue&quot;:&quot;${L2M000013}&quot;}, {&quot;testValueKey&quot;:&quot;L2M000014&quot;, &quot;testValue&quot;:&quot;${L2M000014}&quot;}, {&quot;testValueKey&quot;:&quot;L2M000127&quot;, &quot;testValue&quot;:&quot;${L2M000127}&quot;}, {&quot;testValueKey&quot;:&quot;LA0000077&quot;, &quot;testValue&quot;:&quot;${LA0000077}&quot;}, {&quot;testValueKey&quot;:&quot;LA0000098&quot;, &quot;testValue&quot;:&quot;${LA0000098}&quot;}, {&quot;testValueKey&quot;:&quot;LA0000094&quot;, &quot;testValue&quot;:&quot;${LA0000094}&quot;}, {&quot;testValueKey&quot;:&quot;KCB_SOHO_YN&quot;, &quot;testValue&quot;:&quot;${KCB_SOHO_YN}&quot;}, {&quot;testValueKey&quot;:&quot;U5DD01006&quot;, &quot;testValue&quot;:&quot;${U5DD01006}&quot;}, {&quot;testValueKey&quot;:&quot;SC0000000&quot;, &quot;testValue&quot;:&quot;${SC0000000}&quot;}, {&quot;testValueKey&quot;:&quot;SC0001000&quot;, &quot;testValue&quot;:&quot;${SC0001000}&quot;}, {&quot;testValueKey&quot;:&quot;S92000000&quot;, &quot;testValue&quot;:&quot;${S92000000}&quot;}, {&quot;testValueKey&quot;:&quot;S92101000&quot;, &quot;testValue&quot;:&quot;${S92101000}&quot;}, {&quot;testValueKey&quot;:&quot;SUL000000&quot;, &quot;testValue&quot;:&quot;${SUL000000}&quot;}, {&quot;testValueKey&quot;:&quot;SUL001000&quot;, &quot;testValue&quot;:&quot;${SUL001000}&quot;}, {&quot;testValueKey&quot;:&quot;U43002030&quot;, &quot;testValue&quot;:&quot;${U43002030}&quot;}, {&quot;testValueKey&quot;:&quot;U42006030&quot;, &quot;testValue&quot;:&quot;${U42006030}&quot;}, {&quot;testValueKey&quot;:&quot;JOB&quot;, &quot;testValue&quot;:&quot;${JOB}&quot;}, {&quot;testValueKey&quot;:&quot;CBMIX0001&quot;, &quot;testValue&quot;:&quot;${CBMIX0001}&quot;}, {&quot;testValueKey&quot;:&quot;CBMIX0025&quot;, &quot;testValue&quot;:&quot;${CBMIX0025}&quot;}, {&quot;testValueKey&quot;:&quot;CBMIX0027&quot;, &quot;testValue&quot;:&quot;${CBMIX0027}&quot;}, {&quot;testValueKey&quot;:&quot;CBMIX0032&quot;, &quot;testValue&quot;:&quot;${CBMIX0032}&quot;}, {&quot;testValueKey&quot;:&quot;CBMIX0042&quot;, &quot;testValue&quot;:&quot;${CBMIX0042}&quot;}, {&quot;testValueKey&quot;:&quot;CBMIX0044&quot;, &quot;testValue&quot;:&quot;${CBMIX0044}&quot;}, {&quot;testValueKey&quot;:&quot;CBMIX0047&quot;, &quot;testValue&quot;:&quot;${CBMIX0047}&quot;}, {&quot;testValueKey&quot;:&quot;CBMIX0050&quot;, &quot;testValue&quot;:&quot;${CBMIX0050}&quot;}, {&quot;testValueKey&quot;:&quot;CBMIX0051&quot;, &quot;testValue&quot;:&quot;${CBMIX0051}&quot;}, {&quot;testValueKey&quot;:&quot;CBMIX0056&quot;, &quot;testValue&quot;:&quot;${CBMIX0056}&quot;}, {&quot;testValueKey&quot;:&quot;CBMIX0058&quot;, &quot;testValue&quot;:&quot;${CBMIX0058}&quot;}, {&quot;testValueKey&quot;:&quot;CBMIX0059&quot;, &quot;testValue&quot;:&quot;${CBMIX0059}&quot;}, {&quot;testValueKey&quot;:&quot;CBMIX0071&quot;, &quot;testValue&quot;:&quot;${CBMIX0071}&quot;}, {&quot;testValueKey&quot;:&quot;CBMIX0077&quot;, &quot;testValue&quot;:&quot;${CBMIX0077}&quot;}, {&quot;testValueKey&quot;:&quot;CBMIX0079&quot;, &quot;testValue&quot;:&quot;${CBMIX0079}&quot;}, {&quot;testValueKey&quot;:&quot;CBMIX0096&quot;, &quot;testValue&quot;:&quot;${CBMIX0096}&quot;}, {&quot;testValueKey&quot;:&quot;CBMIX0098&quot;, &quot;testValue&quot;:&quot;${CBMIX0098}&quot;}, {&quot;testValueKey&quot;:&quot;CBMIX0105&quot;, &quot;testValue&quot;:&quot;${CBMIX0105}&quot;}, {&quot;testValueKey&quot;:&quot;CBMIX0119&quot;, &quot;testValue&quot;:&quot;${CBMIX0119}&quot;}, {&quot;testValueKey&quot;:&quot;CBMIX0123&quot;, &quot;testValue&quot;:&quot;${CBMIX0123}&quot;}] </stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">192.168.57.224</stringProp>
            <stringProp name="HTTPSampler.port">8180</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/kais/ruleManagement/readCaseTestResult.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://192.168.57.224:8180/kais/ruleManagement/readStrgMngmMain.do</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">http://192.168.57.224:8180</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.67 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain"></stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">false</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ProxyControl guiclass="ProxyControlGui" testclass="ProxyControl" testname="HTTP(S) Test Script Recorder" enabled="true">
        <stringProp name="ProxyControlGui.port">8888</stringProp>
        <collectionProp name="ProxyControlGui.exclude_list">
          <stringProp name="40260608">*.gif</stringProp>
          <stringProp name="40263709">*.jpg</stringProp>
          <stringProp name="40269413">*.png</stringProp>
        </collectionProp>
        <collectionProp name="ProxyControlGui.include_list"/>
        <boolProp name="ProxyControlGui.capture_http_headers">true</boolProp>
        <intProp name="ProxyControlGui.grouping_mode">0</intProp>
        <boolProp name="ProxyControlGui.add_assertion">false</boolProp>
        <stringProp name="ProxyControlGui.sampler_type_name"></stringProp>
        <boolProp name="ProxyControlGui.sampler_redirect_automatically">false</boolProp>
        <boolProp name="ProxyControlGui.sampler_follow_redirects">true</boolProp>
        <boolProp name="ProxyControlGui.use_keepalive">true</boolProp>
        <boolProp name="ProxyControlGui.detect_graphql_request">true</boolProp>
        <boolProp name="ProxyControlGui.sampler_download_images">false</boolProp>
        <intProp name="ProxyControlGui.proxy_http_sampler_naming_mode">0</intProp>
        <stringProp name="ProxyControlGui.default_encoding"></stringProp>
        <stringProp name="ProxyControlGui.proxy_prefix_http_sampler_name"></stringProp>
        <stringProp name="ProxyControlGui.proxy_pause_http_sampler"></stringProp>
        <boolProp name="ProxyControlGui.notify_child_sl_filtered">false</boolProp>
        <boolProp name="ProxyControlGui.regex_match">false</boolProp>
        <stringProp name="ProxyControlGui.content_type_include"></stringProp>
        <stringProp name="ProxyControlGui.content_type_exclude"></stringProp>
        <stringProp name="ProxyControlGui.domains">192.168.57.243</stringProp>
      </ProxyControl>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="KAI-S Web DB Connection" enabled="true">
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="connectionProperties"></stringProp>
        <stringProp name="dataSource">kaiswebdb</stringProp>
        <stringProp name="dbUrl">jdbc:h2:tcp://192.168.57.224:9092/KAIS-WEB;AUTO_SERVER=TRUE;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE</stringProp>
        <stringProp name="driver">org.h2.Driver</stringProp>
        <stringProp name="initQuery"></stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password">1234!</stringProp>
        <stringProp name="poolMax">5</stringProp>
        <boolProp name="preinit">false</boolProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">sa</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <com.auto.test.jmeter.plugin.common.listener.PluginTestListener guiclass="com.auto.test.jmeter.plugin.common.gui.PluginTestListenerGui" testclass="com.auto.test.jmeter.plugin.common.listener.PluginTestListener" testname="[res_key=Test Automation Result Listener :)]" enabled="true"/>
      <hashTree/>
      <BackendListener guiclass="BackendListenerGui" testclass="BackendListener" testname="KaiS -  Backend Listener" enabled="true">
        <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="influxdbMetricsSender" elementType="Argument">
              <stringProp name="Argument.name">influxdbMetricsSender</stringProp>
              <stringProp name="Argument.value">org.apache.jmeter.visualizers.backend.influxdb.HttpMetricsSender</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="influxdbUrl" elementType="Argument">
              <stringProp name="Argument.name">influxdbUrl</stringProp>
              <stringProp name="Argument.value">http://192.168.57.224:8086/write?db=jmeter</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="application" elementType="Argument">
              <stringProp name="Argument.name">application</stringProp>
              <stringProp name="Argument.value">application name</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="measurement" elementType="Argument">
              <stringProp name="Argument.name">measurement</stringProp>
              <stringProp name="Argument.value">jmeter</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="summaryOnly" elementType="Argument">
              <stringProp name="Argument.name">summaryOnly</stringProp>
              <stringProp name="Argument.value">false</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="samplersRegex" elementType="Argument">
              <stringProp name="Argument.name">samplersRegex</stringProp>
              <stringProp name="Argument.value">.*</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="percentiles" elementType="Argument">
              <stringProp name="Argument.name">percentiles</stringProp>
              <stringProp name="Argument.value">99;95;90</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="testTitle" elementType="Argument">
              <stringProp name="Argument.name">testTitle</stringProp>
              <stringProp name="Argument.value">Test name</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="eventTags" elementType="Argument">
              <stringProp name="Argument.name">eventTags</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </elementProp>
        <stringProp name="classname">org.apache.jmeter.visualizers.backend.influxdb.InfluxdbBackendListenerClient</stringProp>
      </BackendListener>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
